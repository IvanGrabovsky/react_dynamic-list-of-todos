{"version":3,"sources":["api.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoList","todos","selectedTodo","select","className","map","todo","classNames","id","completed","title","type","onClick","TodoFilter","onFilteredTodos","useState","query","setQuery","filteredBy","setFilteredBy","useEffect","value","onChange","event","target","placeholder","length","style","pointerEvents","Loader","TodoModal","currentTodo","isLoading","setIsLoading","user","setUser","userId","selectedUser","href","email","name","App","loadedTodos","setLoadedTodos","visibleTodos","setVisibleTodos","selectedTodoId","setSelectedTodoId","isLoaded","setIsLoaded","loader","a","filter","includes","find","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6eb2bf69.chunk.js","sourcesContent":["import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(1000)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import classNames from 'classnames';\n\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n  selectedTodo: number;\n  select: (value: number) => void;\n};\n\nexport const TodoList: React.FC<Props> = ({ todos, selectedTodo, select }) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map(todo => (\n        <tr\n          key={todo.id}\n          data-cy=\"todo\"\n          className={classNames(\n            {\n              'has-background-info-light': selectedTodo === todo.id,\n            },\n          )}\n        >\n          <td className=\"is-vcentered\">{todo.id}</td>\n          <td className=\"is-vcentered\">\n            <span className=\"icon\" data-cy=\"iconCompleted\">\n              <i className={classNames(\n                'fa-regular',\n                {\n                  'fa-circle-check': todo.completed,\n                  'has-text-success': todo.completed,\n                  'fa-circle-xmark': !todo.completed,\n                  'has-text-danger': !todo.completed,\n                },\n              )}\n              />\n            </span>\n          </td>\n          <td className=\"is-vcentered is-expanded\">\n            <p className={classNames(\n              {\n                'has-text-danger': !todo.completed,\n                'has-text-success': todo.completed,\n              },\n            )}\n            >\n              {todo.title}\n            </p>\n          </td>\n          <td className=\"has-text-right is-vcentered\">\n            <button\n              data-cy=\"selectButton\"\n              className=\"button\"\n              type=\"button\"\n              onClick={() => select(todo.id)}\n            >\n              <span className=\"icon\">\n                <i className=\"far fa-eye\" />\n              </span>\n            </button>\n          </td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n);\n","import { useEffect, useState } from 'react';\n\n/* eslint-disable max-len */\ntype Props = {\n  onFilteredTodos: (value: string, filteredBy: string) => void;\n};\n\nexport const TodoFilter: React.FC<Props> = ({ onFilteredTodos }) => {\n  const [query, setQuery] = useState('');\n  const [filteredBy, setFilteredBy] = useState('');\n\n  useEffect(() => {\n    onFilteredTodos(query, filteredBy);\n  }, [query, filteredBy]);\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={filteredBy}\n            onChange={(event) => setFilteredBy(event.target.value)}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={(event) => setQuery(event.target.value)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {query.length > 0 && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => setQuery('')}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { useEffect, useState } from 'react';\nimport { getUser } from '../../api';\n\nimport { Loader } from '../Loader';\n\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\n\ntype Props = {\n  currentTodo: Todo | undefined;\n  select: (Value: number) => void;\n};\n\nexport const TodoModal: React.FC<Props> = ({ select, currentTodo }) => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [user, setUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    if (currentTodo) {\n      getUser(currentTodo.userId)\n        .then(selectedUser => {\n          setUser(selectedUser);\n          setIsLoading(true);\n        });\n    }\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!isLoading ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${currentTodo?.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => select(0)}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {currentTodo?.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {currentTodo?.completed\n                ? (\n                  <strong className=\"has-text-success\">Done</strong>\n                )\n                : (\n                  <strong className=\"has-text-danger\">Planned</strong>\n                )}\n\n              {' by '}\n\n              <a href={`mailto:${user?.email}`}>\n                {user?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { getTodos } from './api';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\n\nimport { Todo } from './types/Todo';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nexport const App: React.FC = () => {\n  const [loadedTodos, setLoadedTodos] = useState<Todo[]>([]);\n  const [visibleTodos, setVisibleTodos] = useState<Todo[]>([]);\n  const [selectedTodoId, setSelectedTodoId] = useState(0);\n  const [isLoaded, setIsLoaded] = useState(false);\n\n  const select = (value: number) => setSelectedTodoId(value);\n\n  useEffect(() => {\n    const loader = async () => {\n      await getTodos().then(todos => {\n        setLoadedTodos(todos);\n        setVisibleTodos(todos);\n      });\n\n      setIsLoaded(true);\n    };\n\n    loader();\n  }, []);\n\n  const filteredTodos = (value: string, filteredBy: string) => {\n    const todos = loadedTodos.filter(todo => {\n      switch (filteredBy) {\n        case 'active':\n          return !todo.completed && todo.title.includes(value);\n        case 'completed':\n          return todo.completed && todo.title.includes(value);\n        default:\n          return todo.title.includes(value);\n      }\n    });\n\n    setVisibleTodos(todos);\n  };\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter onFilteredTodos={filteredTodos} />\n            </div>\n\n            <div className=\"block\">\n              {!isLoaded\n                ? (\n                  <Loader />\n                )\n                : (\n                  <TodoList\n                    todos={visibleTodos}\n                    selectedTodo={selectedTodoId}\n                    select={select}\n                  />\n                )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {!!selectedTodoId && (\n        <TodoModal\n          currentTodo={visibleTodos.find(todo => todo.id === selectedTodoId)}\n          select={select}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}